# ============================================================================
# CLIENT ENVIRONMENT VARIABLES (Vite)
# ============================================================================
# These variables are prefixed with VITE_ to be accessible in the browser.
# SECURITY: Never put sensitive secrets in VITE_ variables!

# Backend API URL
# The URL of your authentication API server
# Development: http://localhost:3001
# Production: https://your-api-domain.com
VITE_API_URL=http://localhost:3001

# Zero Server URL
# The URL where zero-cache server is running for real-time sync
# Development: http://localhost:4848
# Production: Update to your production zero-cache URL
VITE_ZERO_SERVER=http://localhost:4848

# Authentication Feature Flag
# Enable/disable authentication features in the UI
# Set to "true" to enable auth, "false" to disable
# Development: false (for testing without auth)
# Production: true
VITE_AUTH_ENABLED=false

# ============================================================================
# SERVER ENVIRONMENT VARIABLES
# ============================================================================
# These variables are only accessible on the server side.
# SECURITY: Keep these values secret and never commit real values to git!

# Database Configuration (PostgreSQL)
# Full PostgreSQL connection string
# Format: postgresql://[user]:[password]@[host]:[port]/[database]
# Development: postgresql://grocery:grocery@localhost:5432/grocery_db
# Production: Use a secure connection string from your database provider
DATABASE_URL=postgresql://grocery:grocery@localhost:5432/grocery_db

# Alternative: Individual database connection parameters
DB_HOST=localhost
DB_PORT=5432
DB_NAME=grocery_db
DB_USER=grocery
DB_PASSWORD=grocery

# JWT Configuration
# JWT_ACCESS_SECRET: Secret key for signing JWT access tokens
# SECURITY: Use a strong, random string (min 32 characters)
# Generate with: openssl rand -base64 32
# NEVER use the default value in production!
JWT_ACCESS_SECRET=your-super-secret-jwt-key-change-this-in-production

# JWT_REFRESH_SECRET: Secret key for signing JWT refresh tokens
# Should be different from JWT_ACCESS_SECRET
# Generate with: openssl rand -base64 32
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production

# JWT_ACCESS_EXPIRY: Access token expiration time
# Format: Use time strings like "15m", "1h", "7d"
# Recommended: 15m-1h for access tokens
JWT_ACCESS_EXPIRY=15m

# JWT_REFRESH_EXPIRY: Refresh token expiration time
# Format: Use time strings like "7d", "30d", "90d"
# Recommended: 7d-30d for refresh tokens
JWT_REFRESH_EXPIRY=7d

# Server Configuration
# PORT: Port number for the Express server to listen on
# Development: 3001
# Production: Use environment variable from hosting provider or 3001
PORT=3001

# NODE_ENV: Environment mode
# Values: "development" | "production" | "test"
# Controls logging, error messages, and performance optimizations
NODE_ENV=development

# CORS_ORIGIN: Allowed CORS origins (comma-separated for multiple)
# Development: http://localhost:3000
# Production: https://your-frontend-domain.com,https://your-app.com
# Use "*" only for public APIs (NOT recommended for auth APIs)
CORS_ORIGIN=http://localhost:3000

# Security Configuration
# BCRYPT_ROUNDS: Number of bcrypt hashing rounds (10-12 recommended)
BCRYPT_ROUNDS=10

# RATE_LIMIT_WINDOW_MS: Rate limit time window in milliseconds (15 minutes = 900000)
RATE_LIMIT_WINDOW_MS=900000

# RATE_LIMIT_MAX_REQUESTS: Maximum requests per IP within the time window
RATE_LIMIT_MAX_REQUESTS=100

# Debug Configuration (optional)
# DEBUG_DB: Enable detailed database query logging
DEBUG_DB=false

# ============================================================================
# ZERO CACHE CONFIGURATION
# ============================================================================
# Configuration for zero-cache server (real-time sync)

# ZERO_UPSTREAM_DB: PostgreSQL connection string for zero-cache
# Should match DATABASE_URL
ZERO_UPSTREAM_DB=postgresql://grocery:grocery@localhost:5432/grocery_db

# ZERO_REPLICA_FILE: Path to zero-cache's local replica database file
# Development: /tmp/zero-replica.db
# Production: Use a persistent volume path
ZERO_REPLICA_FILE=/tmp/zero-replica.db

# ZERO_AUTH_SECRET: Secret for zero-cache authentication
# Should be different from JWT secrets
# Generate with: openssl rand -base64 32
ZERO_AUTH_SECRET=dev-secret-key
