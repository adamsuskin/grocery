# SSL Security Parameters
# Strong SSL/TLS configuration following modern security best practices
# Compatible with Mozilla's "Intermediate" configuration for broad compatibility
# while maintaining strong security.

# SSL Protocol Configuration
# Only allow TLS 1.2 and 1.3 (disable older, vulnerable protocols)
ssl_protocols TLSv1.2 TLSv1.3;

# Cipher Suite Configuration
# Use strong, modern ciphers prioritizing forward secrecy (ECDHE)
# This configuration balances security with compatibility
ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';

# Prefer server ciphers over client ciphers for better security
ssl_prefer_server_ciphers off;

# Diffie-Hellman Parameters
# Generate with: openssl dhparam -out /etc/nginx/dhparam.pem 4096
# Uncomment after generating the dhparam file
# ssl_dhparam /etc/nginx/dhparam.pem;

# SSL Session Configuration
# Enable session resumption for better performance
ssl_session_cache shared:SSL:10m;
ssl_session_timeout 1d;
ssl_session_tickets off;

# OCSP Stapling
# Improves SSL/TLS handshake performance by caching certificate status
ssl_stapling on;
ssl_stapling_verify on;

# DNS resolver for OCSP stapling
# Use Google DNS, Cloudflare DNS, or your own resolver
resolver 8.8.8.8 8.8.4.4 1.1.1.1 1.0.0.1 valid=300s;
resolver_timeout 5s;

# SSL Buffer Size
# Optimize SSL buffer size for performance (adjust based on needs)
ssl_buffer_size 4k;

# Additional Security Headers
# These are included here for completeness but may be overridden in the main config

# HTTP Strict Transport Security (HSTS)
# Tells browsers to always use HTTPS for this domain
# max-age: 1 year (31536000 seconds)
# includeSubDomains: Apply to all subdomains
# preload: Allow inclusion in browser HSTS preload lists
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

# X-Frame-Options
# Prevent clickjacking attacks by disabling iframe embedding
add_header X-Frame-Options "DENY" always;

# X-Content-Type-Options
# Prevent MIME type sniffing
add_header X-Content-Type-Options "nosniff" always;

# X-XSS-Protection
# Enable browser XSS protection (legacy but still useful for older browsers)
add_header X-XSS-Protection "1; mode=block" always;

# Referrer Policy
# Control how much referrer information is included with requests
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Feature Policy / Permissions Policy
# Restrict access to browser features
add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), accelerometer=()" always;

# Expect-CT
# Certificate Transparency enforcement (helps detect mis-issued certificates)
# max-age: 30 days
add_header Expect-CT "max-age=2592000, enforce" always;

# Notes:
# 1. Generate strong DH parameters:
#    openssl dhparam -out /etc/nginx/dhparam.pem 4096
#
# 2. Test SSL configuration:
#    https://www.ssllabs.com/ssltest/
#
# 3. Verify OCSP stapling:
#    openssl s_client -connect YOUR_DOMAIN:443 -status
#
# 4. Update ciphers periodically as cryptographic standards evolve
#
# 5. Monitor Mozilla SSL Configuration Generator for updates:
#    https://ssl-config.mozilla.org/
