# Production Nginx Configuration for Grocery App
# This configuration supports HTTPS with Let's Encrypt, HTTP to HTTPS redirect,
# reverse proxy for API and Zero Cache, WebSocket support, and security best practices.

# Rate limiting zones
# Limit general requests to prevent abuse
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

# Upstream servers for load balancing and failover
upstream auth_backend {
    server auth-server:3001 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

upstream zero_backend {
    server zero-cache:4848 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# HTTP Server - Redirect all traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name YOUR_DOMAIN www.YOUR_DOMAIN;

    # Allow Let's Encrypt ACME challenge for certificate verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
        try_files $uri =404;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS Server - Main production configuration
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name YOUR_DOMAIN www.YOUR_DOMAIN;

    # Root directory for static files (built frontend)
    root /usr/share/nginx/html;
    index index.html;

    # SSL Certificate Configuration
    # Replace these paths with your actual Let's Encrypt certificate paths
    ssl_certificate /etc/letsencrypt/live/YOUR_DOMAIN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/YOUR_DOMAIN/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/YOUR_DOMAIN/chain.pem;

    # Include SSL security parameters
    include /etc/nginx/ssl-params.conf;

    # Include proxy parameters for all proxy locations
    include /etc/nginx/proxy-params.conf;

    # Access and error logs
    access_log /var/log/nginx/grocery_access.log;
    error_log /var/log/nginx/grocery_error.log warn;

    # Gzip compression for better performance
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/x-javascript
        application/xml
        application/xml+rss
        application/atom+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;
    gzip_disable "msie6";

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Content Security Policy - Adjust based on your needs
    # This is a strict policy; you may need to relax it for third-party scripts
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' wss: ws:; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

    # Health check endpoint (no authentication required)
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # API endpoints - Proxy to auth server
    location /api/ {
        # Rate limiting for API endpoints
        limit_req zone=api burst=20 nodelay;
        limit_req_status 429;

        proxy_pass http://auth_backend;
        proxy_redirect off;

        # Override Content-Security-Policy for API responses if needed
        proxy_hide_header Content-Security-Policy;
    }

    # Authentication endpoints - Stricter rate limiting
    location /api/auth/ {
        limit_req zone=auth burst=10 nodelay;
        limit_req_status 429;

        proxy_pass http://auth_backend;
        proxy_redirect off;
    }

    # Zero Cache endpoints - Real-time sync server
    location /zero/ {
        # Rate limiting for Zero endpoints
        limit_req zone=api burst=50 nodelay;

        proxy_pass http://zero_backend;
        proxy_redirect off;

        # WebSocket support for Zero sync
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Disable buffering for real-time sync
        proxy_buffering off;
        proxy_cache off;

        # Increase timeouts for long-lived connections
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # WebSocket connections for Zero sync
    # Some implementations use a dedicated WebSocket path
    location /ws {
        # Rate limiting for WebSocket connections
        limit_req zone=general burst=10 nodelay;

        proxy_pass http://zero_backend;
        proxy_redirect off;

        # WebSocket headers
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Disable buffering
        proxy_buffering off;
        proxy_cache off;

        # Long-lived connection timeouts
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        proxy_connect_timeout 60s;
    }

    # Static assets - Aggressive caching with versioning
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|avif|woff|woff2|ttf|eot|otf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;

        # CORS headers for fonts and assets if needed
        add_header Access-Control-Allow-Origin "*";

        try_files $uri =404;
    }

    # Service Worker - No caching to ensure updates
    location /sw.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        try_files $uri =404;
    }

    # Web App Manifest - Short cache
    location /manifest.json {
        add_header Cache-Control "public, max-age=86400";
        try_files $uri =404;
    }

    # PWA icons and assets
    location ~* \.(webmanifest)$ {
        add_header Cache-Control "public, max-age=86400";
        try_files $uri =404;
    }

    # Robots.txt and sitemap
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    location = /sitemap.xml {
        access_log off;
        log_not_found off;
    }

    # Deny access to hidden files (e.g., .git, .env)
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # SPA routing - Serve index.html for all routes
    # This must be last to catch all unmatched routes
    location / {
        # Rate limiting for general page requests
        limit_req zone=general burst=20 nodelay;

        # Try to serve file directly, fallback to SPA router
        try_files $uri $uri/ /index.html;

        # No caching for HTML to ensure users get updates
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # Custom error pages (optional)
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}
