global:
  resolve_timeout: 5m

route:
  group_by: ['alertname', 'cluster', 'service']
  group_wait: 10s
  group_interval: 10s
  repeat_interval: 12h
  receiver: 'default'
  routes:
    - match:
        severity: critical
      receiver: 'critical'
      continue: true
    - match:
        severity: warning
      receiver: 'warning'

receivers:
  - name: 'default'
    # Default receiver - can be configured with webhook, email, etc.
    # webhook_configs:
    #   - url: 'http://localhost:5001/webhook'

  - name: 'critical'
    # Critical alerts - configure with your preferred notification method
    # Example: Slack webhook
    # slack_configs:
    #   - api_url: 'YOUR_SLACK_WEBHOOK_URL'
    #     channel: '#critical-alerts'
    #     title: 'Critical Alert: {{ .GroupLabels.alertname }}'
    #     text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'

    # Example: Email
    # email_configs:
    #   - to: 'ops-team@example.com'
    #     from: 'alertmanager@example.com'
    #     smarthost: 'smtp.example.com:587'
    #     auth_username: 'alertmanager@example.com'
    #     auth_password: 'password'
    #     headers:
    #       Subject: 'CRITICAL: {{ .GroupLabels.alertname }}'

  - name: 'warning'
    # Warning alerts - can be sent to different channels
    # slack_configs:
    #   - api_url: 'YOUR_SLACK_WEBHOOK_URL'
    #     channel: '#warnings'
    #     title: 'Warning: {{ .GroupLabels.alertname }}'
    #     text: '{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'

inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']
